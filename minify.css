@import url(https://fonts.googleapis.com/css2?family=Inria+Sans:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap);
a,
hr {
  color: inherit;
}
progress,
sub,
sup {
  vertical-align: baseline;
}
blockquote,
body,
dd,
dl,
fieldset,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
menu,
ol,
p,
pre,
ul {
  margin: 0;
}
dialog,
fieldset,
legend,
menu,
ol,
ul {
  padding: 0;
}
.avatar,
sub,
sup {
  position: relative;
}
.btn-disabled,
.btn:disabled,
.btn[disabled],
.modal {
  pointer-events: none;
}
.btn,
.modal {
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}
.btn,
.select {
  min-height: 3rem;
}
.btn,
.modal,
.swap > * {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}
*,
.btn.glass,
::after,
::before {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
}
.avatar > div,
.overflow-hidden {
  overflow: hidden;
}
.btn,
.text-center {
  text-align: center;
}
*,
::after,
::before {
  box-sizing: border-box;
  border: 0 solid #e5e7eb;
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x: ;
  --tw-pan-y: ;
  --tw-pinch-zoom: ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position: ;
  --tw-gradient-via-position: ;
  --tw-gradient-to-position: ;
  --tw-ordinal: ;
  --tw-slashed-zero: ;
  --tw-numeric-figure: ;
  --tw-numeric-spacing: ;
  --tw-numeric-fraction: ;
  --tw-ring-inset: ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-blur: ;
  --tw-brightness: ;
  --tw-contrast: ;
  --tw-grayscale: ;
  --tw-hue-rotate: ;
  --tw-invert: ;
  --tw-saturate: ;
  --tw-sepia: ;
  --tw-drop-shadow: ;
  --tw-backdrop-blur: ;
  --tw-backdrop-brightness: ;
  --tw-backdrop-contrast: ;
  --tw-backdrop-grayscale: ;
  --tw-backdrop-hue-rotate: ;
  --tw-backdrop-invert: ;
  --tw-backdrop-opacity: ;
  --tw-backdrop-saturate: ;
  --tw-backdrop-sepia: ;
  --tw-contain-size: ;
  --tw-contain-layout: ;
  --tw-contain-paint: ;
  --tw-contain-style: ;
}
::after,
::before {
  --tw-content: "";
}
:host,
html {
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
  font-family: Inria Sans, sans-serif;
  font-feature-settings: normal;
  font-variation-settings: normal;
  -webkit-tap-highlight-color: transparent;
}
body {
  line-height: inherit;
}
hr {
  height: 0;
  border-top-width: 1px;
}
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}
a {
  text-decoration: inherit;
}
b,
strong {
  font-weight: bolder;
}
code,
kbd,
pre,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
    "Liberation Mono", "Courier New", monospace;
  font-feature-settings: normal;
  font-variation-settings: normal;
  font-size: 1em;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-feature-settings: inherit;
  font-variation-settings: inherit;
  font-size: 100%;
  font-weight: inherit;
  line-height: inherit;
  letter-spacing: inherit;
  color: inherit;
  margin: 0;
  padding: 0;
}
button,
select {
  text-transform: none;
}
button,
input:where([type="button"]),
input:where([type="reset"]),
input:where([type="submit"]) {
  -webkit-appearance: button;
  background-color: transparent;
  background-image: none;
}
:-moz-focusring {
  outline: auto;
}
:-moz-ui-invalid {
  box-shadow: none;
}
.btn,
.btn.glass,
.shadow-md,
.shadow-sm {
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}
[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}
::-webkit-search-decoration {
  -webkit-appearance: none;
}
::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}
.btn,
.font-semibold {
  font-weight: 600;
}
summary {
  display: list-item;
}
menu,
ol,
ul {
  list-style: none;
}
textarea {
  resize: vertical;
}
input::-moz-placeholder,
textarea::-moz-placeholder {
  opacity: 1;
  color: #9ca3af;
}
input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}
.cursor-pointer,
[role="button"],
button {
  cursor: pointer;
}
:disabled {
  cursor: default;
}
audio,
canvas,
embed,
iframe,
img,
object,
svg,
video {
  display: block;
  vertical-align: middle;
}
img,
video {
  max-width: 100%;
  height: auto;
}
.hidden,
[hidden] {
  display: none;
}
.avatar,
.btn {
  display: inline-flex;
}
:root,
[data-theme] {
  background-color: var(--fallback-b1, oklch(var(--b1) / 1));
  color: var(--fallback-bc, oklch(var(--bc) / 1));
}
html {
  -webkit-tap-highlight-color: transparent;
}
* {
  scrollbar-color: color-mix(in oklch, currentColor 35%, transparent)
    transparent;
}
:hover {
  scrollbar-color: color-mix(in oklch, currentColor 60%, transparent)
    transparent;
}
:root {
  --p: 71.8784% 0.080153 67.873519;
  --b2: 65.2557% 0.299917 328.363418;
  --b3: 60.344% 0.277342 328.363418;
  --bc: 14.0335% 0.064498 328.363418;
  --pc: 14.3757% 0.016031 67.873519;
  --sc: 14.0335% 0.064498 328.363418;
  --ac: 18.2884% 0.01263 69.214332;
  --nc: 17.8211% 0.005004 121.947034;
  --inc: 89.0403% 0.062643 264.052021;
  --suc: 88.7426% 0.009037 122.742264;
  --wac: 17.3288% 0.058965 142.495339;
  --erc: 12.5591% 0.051537 29.233885;
  --rounded-box: 1rem;
  --rounded-btn: 0.5rem;
  --rounded-badge: 1.9rem;
  --animation-btn: 0.25s;
  --animation-input: 0.2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --s: 70.1674% 0.322491 328.363418;
  --a: 91.4419% 0.063151 69.214332;
  --n: 89.1057% 0.02502 121.947034;
  --b1: 70.1674% 0.322491 328.363418;
  --in: 45.2014% 0.313214 264.052021;
  --su: 43.713% 0.045186 122.742264;
  --wa: 86.644% 0.294827 142.495339;
  --er: 62.7955% 0.257683 29.233885;
}
.btn,
.checkbox {
  border-radius: var(--rounded-btn, 0.5rem);
  cursor: pointer;
}
::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x: ;
  --tw-pan-y: ;
  --tw-pinch-zoom: ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position: ;
  --tw-gradient-via-position: ;
  --tw-gradient-to-position: ;
  --tw-ordinal: ;
  --tw-slashed-zero: ;
  --tw-numeric-figure: ;
  --tw-numeric-spacing: ;
  --tw-numeric-fraction: ;
  --tw-ring-inset: ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur: ;
  --tw-brightness: ;
  --tw-contrast: ;
  --tw-grayscale: ;
  --tw-hue-rotate: ;
  --tw-invert: ;
  --tw-saturate: ;
  --tw-sepia: ;
  --tw-drop-shadow: ;
  --tw-backdrop-blur: ;
  --tw-backdrop-brightness: ;
  --tw-backdrop-contrast: ;
  --tw-backdrop-grayscale: ;
  --tw-backdrop-hue-rotate: ;
  --tw-backdrop-invert: ;
  --tw-backdrop-opacity: ;
  --tw-backdrop-saturate: ;
  --tw-backdrop-sepia: ;
  --tw-contain-size: ;
  --tw-contain-layout: ;
  --tw-contain-paint: ;
  --tw-contain-style: ;
}
.avatar > div {
  display: block;
  aspect-ratio: 1/1;
}
.avatar img {
  height: 100%;
  width: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}
.avatar.placeholder > div {
  display: flex;
  align-items: center;
  justify-content: center;
}
.btn {
  height: 3rem;
  flex-shrink: 0;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  border-color: transparent;
  border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 0.875rem;
  line-height: 1em;
  gap: 0.5rem;
  text-decoration-line: none;
  border-width: var(--border-btn, 1px);
  transition-property: color, background-color, border-color, opacity,
    box-shadow, transform;
  --tw-text-opacity: 1;
  color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  outline-color: var(--fallback-bc, oklch(var(--bc) / 1));
  background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
  --tw-bg-opacity: 1;
  --tw-border-opacity: 1;
}
.label,
.select {
  -webkit-user-select: none;
  -moz-user-select: none;
}
.btm-nav > * .label,
.input {
  font-size: 1rem;
  line-height: 1.5rem;
}
:where(.btn:is(input[type="checkbox"])),
:where(.btn:is(input[type="radio"])) {
  width: auto;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}
.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
  --tw-content: attr(aria-label);
  content: var(--tw-content);
}
.checkbox {
  flex-shrink: 0;
  --chkbg: var(--fallback-bc, oklch(var(--bc) / 1));
  --chkfg: var(--fallback-b1, oklch(var(--b1) / 1));
  height: 1.5rem;
  width: 1.5rem;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border-width: 1px;
  border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
  --tw-border-opacity: 0.2;
}
.input,
.select {
  -webkit-appearance: none;
  -moz-appearance: none;
  border-radius: var(--rounded-btn, 0.5rem);
  border-width: 1px;
  border-color: transparent;
  --tw-bg-opacity: 1;
}
.divider {
  display: flex;
  flex-direction: row;
  align-items: center;
  align-self: stretch;
  margin-top: 1rem;
  margin-bottom: 1rem;
  height: 1rem;
  white-space: nowrap;
}
.divider:after,
.divider:before {
  height: 0.125rem;
  width: 100%;
  flex-grow: 1;
  --tw-content: "";
  content: var(--tw-content);
  background-color: var(--fallback-bc, oklch(var(--bc) / 0.1));
}
@media (hover: hover) {
  .link-hover:hover {
    text-decoration-line: underline;
  }
  .label a:hover {
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
  }
  .btn:hover {
    --tw-border-opacity: 1;
    border-color: var(
      --fallback-b3,
      oklch(var(--b3) / var(--tw-border-opacity))
    );
    --tw-bg-opacity: 1;
    background-color: var(
      --fallback-b3,
      oklch(var(--b3) / var(--tw-bg-opacity))
    );
  }
  @supports (color: color-mix(in oklab, black, black)) {
    .btn:hover {
      background-color: color-mix(
        in oklab,
        oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
        #000
      );
      border-color: color-mix(
        in oklab,
        oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
        #000
      );
    }
    .btn-outline.btn-primary:hover {
      background-color: color-mix(
        in oklab,
        var(--fallback-p, oklch(var(--p) / 1)) 90%,
        #000
      );
      border-color: color-mix(
        in oklab,
        var(--fallback-p, oklch(var(--p) / 1)) 90%,
        #000
      );
    }
    .btn-outline.btn-success:hover {
      background-color: color-mix(
        in oklab,
        var(--fallback-su, oklch(var(--su) / 1)) 90%,
        #000
      );
      border-color: color-mix(
        in oklab,
        var(--fallback-su, oklch(var(--su) / 1)) 90%,
        #000
      );
    }
    .btn:is(input[type="checkbox"]:checked):hover,
    .btn:is(input[type="radio"]:checked):hover {
      background-color: color-mix(
        in oklab,
        var(--fallback-p, oklch(var(--p) / 1)) 90%,
        #000
      );
      border-color: color-mix(
        in oklab,
        var(--fallback-p, oklch(var(--p) / 1)) 90%,
        #000
      );
    }
  }
  @supports not (color: oklch(0% 0 0)) {
    .btn:hover {
      background-color: var(--btn-color, var(--fallback-b2));
      border-color: var(--btn-color, var(--fallback-b2));
    }
  }
  .btn.glass:hover {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%;
  }
  .btn-outline.btn-primary:hover {
    --tw-text-opacity: 1;
    color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
  }
  .btn-outline.btn-success:hover {
    --tw-text-opacity: 1;
    color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
  }
  .btn-disabled:hover,
  .btn:disabled:hover,
  .btn[disabled]:hover {
    --tw-border-opacity: 0;
    background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
    --tw-bg-opacity: 0.2;
    color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
    --tw-text-opacity: 0.2;
  }
}
.label {
  display: flex;
  user-select: none;
  align-items: center;
  justify-content: space-between;
  padding: 0.5rem 0.25rem;
}
.input {
  flex-shrink: 1;
  appearance: none;
  height: 3rem;
  padding-left: 1rem;
  padding-right: 1rem;
  background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
}
.input-md[type="number"]::-webkit-inner-spin-button,
.input[type="number"]::-webkit-inner-spin-button {
  margin-top: -1rem;
  margin-bottom: -1rem;
  margin-inline-end: -1rem;
}
.link {
  cursor: pointer;
  text-decoration-line: underline;
}
.link-hover {
  text-decoration-line: none;
}
.modal {
  position: fixed;
  inset: 0px;
  margin: 0;
  display: grid;
  height: 100%;
  max-height: none;
  width: 100%;
  max-width: none;
  justify-items: center;
  padding: 0;
  opacity: 0;
  overscroll-behavior: contain;
  z-index: 999;
  background-color: transparent;
  color: inherit;
  transition-property: transform, opacity, visibility;
  overflow-y: hidden;
}
.btn-outline.btn-primary.btn-active,
.btn-primary {
  color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
  --tw-text-opacity: 1;
}
:where(.modal) {
  align-items: center;
}
.modal-open,
.modal-toggle:checked + .modal,
.modal:target,
.modal[open] {
  pointer-events: auto;
  visibility: visible;
  opacity: 1;
}
:root:has(
    :is(
        .modal-open,
        .modal:target,
        .modal-toggle:checked + .modal,
        .modal[open]
      )
  ) {
  overflow: hidden;
  scrollbar-gutter: stable;
}
.select {
  display: inline-flex;
  cursor: pointer;
  user-select: none;
  appearance: none;
  height: 3rem;
  padding-inline-start: 1rem;
  padding-inline-end: 2.5rem;
  font-size: 0.875rem;
  line-height: 2;
  background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
  background-image: linear-gradient(45deg, transparent 50%, currentColor 50%),
    linear-gradient(135deg, currentColor 50%, transparent 50%);
  background-position: calc(100% - 20px) calc(1px + 50%),
    calc(100% - 16.1px) calc(1px + 50%);
  background-size: 4px 4px, 4px 4px;
  background-repeat: no-repeat;
}
.h-auto,
.select[multiple] {
  height: auto;
}
.swap {
  position: relative;
  display: inline-grid;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  place-content: center;
  cursor: pointer;
}
.swap > * {
  grid-column-start: 1;
  grid-row-start: 1;
  transition-duration: 0.3s;
  transition-property: transform, opacity;
}
.transition,
.transition-transform {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.swap input {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}
.swap .swap-indeterminate,
.swap .swap-on,
.swap input:indeterminate ~ .swap-on {
  opacity: 0;
}
.swap input:checked ~ .swap-off,
.swap input:indeterminate ~ .swap-off,
.swap-active .swap-off {
  opacity: 0;
}
.swap input:checked ~ .swap-on,
.swap input:indeterminate ~ .swap-indeterminate,
.swap-active .swap-on {
  opacity: 1;
}
.avatar-group :where(.avatar) {
  overflow: hidden;
  border-radius: 9999px;
  border-width: 4px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-border-opacity)));
}
@media (prefers-reduced-motion: no-preference) {
  .btn {
    animation: button-pop var(--animation-btn, 0.25s) ease-out;
  }
}
.btn:active:focus,
.btn:active:hover {
  animation: ease-out button-pop;
  transform: scale(var(--btn-focus-scale, 0.97));
}
.mockup-browser .mockup-browser-toolbar .input:after,
.mockup-browser .mockup-browser-toolbar .input:before,
.modal-open .modal-box,
.modal-toggle:checked + .modal .modal-box,
.modal:target .modal-box,
.modal[open] .modal-box {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@supports not (color: oklch(0% 0 0)) {
  :root {
    color-scheme: light;
    --fallback-p: #491eff;
    --fallback-pc: #d4dbff;
    --fallback-s: #ff41c7;
    --fallback-sc: #fff9fc;
    --fallback-a: #00cfbd;
    --fallback-ac: #00100d;
    --fallback-n: #2b3440;
    --fallback-nc: #d7dde4;
    --fallback-b1: #ffffff;
    --fallback-b2: #e5e6e6;
    --fallback-b3: #e5e6e6;
    --fallback-bc: #1f2937;
    --fallback-in: #00b3f0;
    --fallback-inc: #000000;
    --fallback-su: #00ca92;
    --fallback-suc: #000000;
    --fallback-wa: #ffc22d;
    --fallback-wac: #000000;
    --fallback-er: #ff6f70;
    --fallback-erc: #000000;
  }
  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --fallback-p: #7582ff;
      --fallback-pc: #050617;
      --fallback-s: #ff71cf;
      --fallback-sc: #190211;
      --fallback-a: #00c7b5;
      --fallback-ac: #000e0c;
      --fallback-n: #2a323c;
      --fallback-nc: #a6adbb;
      --fallback-b1: #1d232a;
      --fallback-b2: #191e24;
      --fallback-b3: #15191e;
      --fallback-bc: #a6adbb;
      --fallback-in: #00b3f0;
      --fallback-inc: #000000;
      --fallback-su: #00ca92;
      --fallback-suc: #000000;
      --fallback-wa: #ffc22d;
      --fallback-wac: #000000;
      --fallback-er: #ff6f70;
      --fallback-erc: #000000;
    }
  }
  .btn {
    background-color: var(--btn-color, var(--fallback-b2));
    border-color: var(--btn-color, var(--fallback-b2));
  }
  .btn-primary {
    --btn-color: var(--fallback-p);
  }
  .btn-success {
    --btn-color: var(--fallback-su);
  }
}
@supports (color: color-mix(in oklab, black, black)) {
  .btn-outline.btn-primary.btn-active {
    background-color: color-mix(
      in oklab,
      var(--fallback-p, oklch(var(--p) / 1)) 90%,
      #000
    );
    border-color: color-mix(
      in oklab,
      var(--fallback-p, oklch(var(--p) / 1)) 90%,
      #000
    );
  }
  .btn-outline.btn-success.btn-active {
    background-color: color-mix(
      in oklab,
      var(--fallback-su, oklch(var(--su) / 1)) 90%,
      #000
    );
    border-color: color-mix(
      in oklab,
      var(--fallback-su, oklch(var(--su) / 1)) 90%,
      #000
    );
  }
}
.btn:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}
.btn-primary {
  outline-color: var(--fallback-p, oklch(var(--p) / 1));
}
@supports (color: oklch(0% 0 0)) {
  .btn-primary {
    --btn-color: var(--p);
  }
  .btn-success {
    --btn-color: var(--su);
  }
}
.btn-success {
  --tw-text-opacity: 1;
  color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
  outline-color: var(--fallback-su, oklch(var(--su) / 1));
}
.btn.glass {
  outline-color: currentColor;
}
.checkbox:focus,
.select:focus {
  box-shadow: none;
}
.btn.glass.btn-active {
  --glass-opacity: 25%;
  --glass-border-opacity: 15%;
}
.btn-outline.btn-primary,
.hover\:text-primary:hover,
.text-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p, oklch(var(--p) / var(--tw-text-opacity)));
}
.btn-outline.btn-success,
.text-success {
  --tw-text-opacity: 1;
  color: var(--fallback-su, oklch(var(--su) / var(--tw-text-opacity)));
}
.btn-outline.btn-success.btn-active {
  --tw-text-opacity: 1;
  color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
}
.btn.btn-disabled,
.btn:disabled,
.btn[disabled] {
  --tw-border-opacity: 0;
  background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
  --tw-bg-opacity: 0.2;
  color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
  --tw-text-opacity: 0.2;
}
.text-\[\#68744F\],
.text-black,
.text-gray-800,
.text-white {
  --tw-text-opacity: 1;
}
.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p, oklch(var(--p) / var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}
.btn:is(input[type="checkbox"]:checked):focus-visible,
.btn:is(input[type="radio"]:checked):focus-visible {
  outline-color: var(--fallback-p, oklch(var(--p) / 1));
}
@keyframes button-pop {
  0% {
    transform: scale(var(--btn-focus-scale, 0.98));
  }
  40% {
    transform: scale(1.02);
  }
  100% {
    transform: scale(1);
  }
}
.checkbox:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: var(--fallback-bc, oklch(var(--bc) / 1));
}
.checkbox:disabled {
  border-width: 0;
  cursor: not-allowed;
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
  opacity: 0.2;
}
.checkbox:checked,
.checkbox[aria-checked="true"] {
  background-repeat: no-repeat;
  animation: checkmark var(--animation-input, 0.2s) ease-out;
  background-color: var(--chkbg);
  background-image: linear-gradient(
      -45deg,
      transparent 65%,
      var(--chkbg) 65.99%
    ),
    linear-gradient(45deg, transparent 75%, var(--chkbg) 75.99%),
    linear-gradient(-45deg, var(--chkbg) 40%, transparent 40.99%),
    linear-gradient(
      45deg,
      var(--chkbg) 30%,
      var(--chkfg) 30.99%,
      var(--chkfg) 40%,
      transparent 40.99%
    ),
    linear-gradient(-45deg, var(--chkfg) 50%, var(--chkbg) 50.99%);
}
.checkbox:indeterminate {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
  background-repeat: no-repeat;
  animation: checkmark var(--animation-input, 0.2s) ease-out;
  background-image: linear-gradient(90deg, transparent 80%, var(--chkbg) 80%),
    linear-gradient(-90deg, transparent 80%, var(--chkbg) 80%),
    linear-gradient(
      0deg,
      var(--chkbg) 43%,
      var(--chkfg) 43%,
      var(--chkfg) 57%,
      var(--chkbg) 57%
    );
}
@keyframes checkmark {
  0% {
    background-position-y: 5px;
  }
  50% {
    background-position-y: -2px;
  }
  100% {
    background-position-y: 0;
  }
}
.divider:not(:empty),
.gap-4 {
  gap: 1rem;
}
.input input {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
  background-color: transparent;
}
.input input:focus,
.link:focus {
  outline: transparent solid 2px;
  outline-offset: 2px;
}
.input[list]::-webkit-calendar-picker-indicator {
  line-height: 1em;
}
.input:focus,
.input:focus-within {
  box-shadow: none;
  border-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.input-disabled,
.input:disabled,
.input:has(> input[disabled]),
.input[disabled] {
  cursor: not-allowed;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
  color: var(--fallback-bc, oklch(var(--bc) / 0.4));
}
.select-bordered,
.select:focus {
  border-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.input-disabled::-moz-placeholder,
.input:disabled::-moz-placeholder,
.input:has(> input[disabled])::-moz-placeholder,
.input[disabled]::-moz-placeholder {
  color: var(--fallback-bc, oklch(var(--bc) / var(--tw-placeholder-opacity)));
  --tw-placeholder-opacity: 0.2;
}
.input-disabled::placeholder,
.input:disabled::placeholder,
.input:has(> input[disabled])::placeholder,
.input[disabled]::placeholder {
  color: var(--fallback-bc, oklch(var(--bc) / var(--tw-placeholder-opacity)));
  --tw-placeholder-opacity: 0.2;
}
.input:has(> input[disabled]) > input[disabled] {
  cursor: not-allowed;
}
.input::-webkit-date-and-time-value {
  text-align: inherit;
}
.join > :where(:not(:first-child)):is(.btn) {
  margin-inline-start: calc(var(--border-btn) * -1);
}
.link:focus-visible {
  outline: currentColor solid 2px;
  outline-offset: 2px;
}
.mockup-browser .mockup-browser-toolbar .input {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  display: block;
  height: 1.75rem;
  width: 24rem;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
  padding-left: 2rem;
  direction: ltr;
}
.avatar.offline:before,
.avatar.online:before {
  content: "";
  z-index: 10;
  display: block;
  outline-style: solid;
  outline-width: 2px;
  outline-color: var(--fallback-b1, oklch(var(--b1) / 1));
  width: 15%;
  height: 15%;
  top: 7%;
  right: 7%;
  position: absolute;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
}
.mockup-browser .mockup-browser-toolbar .input:before {
  content: "";
  position: absolute;
  left: 0.5rem;
  top: 50%;
  aspect-ratio: 1/1;
  height: 0.75rem;
  --tw-translate-y: -50%;
  border-radius: 9999px;
  border-width: 2px;
  border-color: currentColor;
  opacity: 0.6;
}
.mockup-browser .mockup-browser-toolbar .input:after {
  content: "";
  position: absolute;
  left: 1.25rem;
  top: 50%;
  height: 0.5rem;
  --tw-translate-y: 25%;
  --tw-rotate: -45deg;
  border-radius: 9999px;
  border-width: 1px;
  border-color: currentColor;
  opacity: 0.6;
}
.modal::backdrop,
.modal:not(dialog:not(.modal-open)) {
  background-color: #0006;
  animation: 0.2s ease-out modal-pop;
}
.modal-open .modal-box,
.modal-toggle:checked + .modal .modal-box,
.modal:target .modal-box,
.modal[open] .modal-box {
  --tw-translate-y: 0px;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
}
@keyframes modal-pop {
  0% {
    opacity: 0;
  }
}
@keyframes progress-loading {
  50% {
    background-position-x: -115%;
  }
}
@keyframes radiomark {
  0% {
    box-shadow: 0 0 0 12px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
      0 0 0 12px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
  }
  50% {
    box-shadow: 0 0 0 3px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
      0 0 0 3px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
  }
  100% {
    box-shadow: 0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
      0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
  }
}
@keyframes rating-pop {
  0%,
  40% {
    transform: translateY(-0.125em);
  }
  100% {
    transform: translateY(0);
  }
}
.select:focus {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.select-disabled,
.select:disabled,
.select[disabled] {
  cursor: not-allowed;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
  color: var(--fallback-bc, oklch(var(--bc) / 0.4));
}
.select-disabled::-moz-placeholder,
.select:disabled::-moz-placeholder,
.select[disabled]::-moz-placeholder {
  color: var(--fallback-bc, oklch(var(--bc) / var(--tw-placeholder-opacity)));
  --tw-placeholder-opacity: 0.2;
}
.select-disabled::placeholder,
.select:disabled::placeholder,
.select[disabled]::placeholder {
  color: var(--fallback-bc, oklch(var(--bc) / var(--tw-placeholder-opacity)));
  --tw-placeholder-opacity: 0.2;
}
.select-multiple,
.select[multiple],
.select[size].select:not([size="1"]) {
  background-image: none;
  padding-right: 1rem;
}
[dir="rtl"] .select {
  background-position: calc(0% + 12px) calc(1px + 50%),
    calc(0% + 16px) calc(1px + 50%);
}
@keyframes skeleton {
  from {
    background-position: 150%;
  }
  to {
    background-position: -50%;
  }
}
.swap-rotate .swap-indeterminate,
.swap-rotate .swap-on,
.swap-rotate input:indeterminate ~ .swap-on {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.swap-active:where(.swap-rotate) .swap-off,
.swap-rotate input:checked ~ .swap-off,
.swap-rotate input:indeterminate ~ .swap-off {
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.swap-active:where(.swap-rotate) .swap-on,
.swap-rotate input:checked ~ .swap-on,
.swap-rotate input:indeterminate ~ .swap-indeterminate {
  --tw-rotate: 0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.swap-flip .swap-indeterminate,
.swap-flip .swap-on,
.swap-flip input:indeterminate ~ .swap-on {
  transform: rotateY(180deg);
  backface-visibility: hidden;
  opacity: 1;
}
.swap-active:where(.swap-flip) .swap-off,
.swap-flip input:checked ~ .swap-off,
.swap-flip input:indeterminate ~ .swap-off {
  transform: rotateY(-180deg);
  backface-visibility: hidden;
  opacity: 1;
}
.swap-active:where(.swap-flip) .swap-on,
.swap-flip input:checked ~ .swap-on,
.swap-flip input:indeterminate ~ .swap-indeterminate {
  transform: rotateY(0);
}
.hover\:scale-125:hover,
.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes toast-pop {
  0% {
    transform: scale(0.9);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}
.avatar.online:before {
  background-color: var(--fallback-su, oklch(var(--su) / var(--tw-bg-opacity)));
}
.avatar.offline:before {
  background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
}
.join.join-vertical > :where(:not(:first-child)):is(.btn) {
  margin-top: calc(var(--border-btn) * -1);
}
.join.join-horizontal > :where(:not(:first-child)):is(.btn) {
  margin-inline-start: calc(var(--border-btn) * -1);
}
.invisible {
  visibility: hidden;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.bottom-0 {
  bottom: 0;
}
.bottom-3 {
  bottom: 0.75rem;
}
.end-0 {
  inset-inline-end: 0px;
}
.left-\[4\.5rem\] {
  left: 4.5rem;
}
.right-10 {
  right: 2.5rem;
}
.right-6 {
  right: 1.5rem;
}
.start-0 {
  inset-inline-start: 0px;
}
.top-0 {
  top: 0;
}
.top-20 {
  top: 5rem;
}
.top-\[6rem\] {
  top: 6rem;
}
.-z-10 {
  z-index: -10;
}
.z-20 {
  z-index: 20;
}
.z-\[17\] {
  z-index: 17;
}
.z-\[18\] {
  z-index: 18;
}
.z-\[21\] {
  z-index: 21;
}
.m-10 {
  margin: 2.5rem;
}
.mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.mb-10 {
  margin-bottom: 2.5rem;
}
.mb-2 {
  margin-bottom: 0.5rem;
}
.mb-4 {
  margin-bottom: 1rem;
}
.mt-1 {
  margin-top: 0.25rem;
}
.mt-2 {
  margin-top: 0.5rem;
}
.mt-4 {
  margin-top: 1rem;
}
.mt-5 {
  margin-top: 1.25rem;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.size-10 {
  width: 2.5rem;
  height: 2.5rem;
}
.size-3 {
  width: 0.75rem;
  height: 0.75rem;
}
.size-6 {
  width: 1.5rem;
  height: 1.5rem;
}
.h-10 {
  height: 2.5rem;
}
.h-28 {
  height: 7rem;
}
.h-32 {
  height: 8rem;
}
.h-8 {
  height: 2rem;
}
.h-\[14\.5rem\] {
  height: 14.5rem;
}
.h-\[32rem\] {
  height: 32rem;
}
.h-\[34rem\] {
  height: 34rem;
}
.h-\[35px\] {
  height: 35px;
}
.h-full {
  height: 100%;
}
.h-screen {
  height: 100vh;
}
.max-h-\[60dvh\] {
  max-height: 60dvh;
}
.min-h-56 {
  min-height: 14rem;
}
.w-20 {
  width: 5rem;
}
.w-28 {
  width: 7rem;
}
.w-36 {
  width: 9rem;
}
.w-\[100dvh\] {
  width: 100dvh;
}
.w-\[50\%\] {
  width: 50%;
}
.w-\[80\%\] {
  width: 80%;
}
.w-\[80vw\] {
  width: 80vw;
}
.w-full {
  width: 100%;
}
.w-screen {
  width: 100vw;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.flex-col-reverse {
  flex-direction: column-reverse;
}
.flex-nowrap {
  flex-wrap: nowrap;
}
.items-center {
  align-items: center;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-items-center {
  justify-items: center;
}
.gap-0 {
  gap: 0;
}
.gap-10 {
  gap: 2.5rem;
}
.gap-16 {
  gap: 4rem;
}
.gap-2 {
  gap: 0.5rem;
}
.gap-5 {
  gap: 1.25rem;
}
.gap-7 {
  gap: 1.75rem;
}
.gap-y-4 {
  row-gap: 1rem;
}
.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.self-center {
  align-self: center;
}
.overflow-y-scroll {
  overflow-y: scroll;
}
.rounded-full {
  border-radius: 9999px;
}
.rounded-md {
  border-radius: 0.375rem;
}
.rounded-sm {
  border-radius: 0.125rem;
}
.rounded-l-md {
  border-top-left-radius: 0.375rem;
  border-bottom-left-radius: 0.375rem;
}
.border {
  border-width: 1px;
}
.border-b {
  border-bottom-width: 1px;
}
.border-l-0 {
  border-left-width: 0;
}
.border-l-\[24px\] {
  border-left-width: 24px;
}
.border-r-0 {
  border-right-width: 0;
}
.border-t {
  border-top-width: 1px;
}
.border-gray-400 {
  --tw-border-opacity: 1;
  border-color: rgb(156 163 175 / var(--tw-border-opacity));
}
.border-l-\[\#68744F\] {
  --tw-border-opacity: 1;
  border-left-color: rgb(104 116 79 / var(--tw-border-opacity));
}
.bg-accent {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-a, oklch(var(--a) / var(--tw-bg-opacity)));
}
.bg-gray-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}
.bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}
.bg-gray-300 {
  --tw-bg-opacity: 1;
  background-color: rgb(209 213 219 / var(--tw-bg-opacity));
}
.bg-gray-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(107 114 128 / var(--tw-bg-opacity));
}
.active .hs-carousel-active\:bg-primary,
.active.hs-carousel-active\:bg-primary,
.bg-primary {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
}
.bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity));
}
.bg-slate-800 {
  --tw-bg-opacity: 1;
  background-color: rgb(30 41 59 / var(--tw-bg-opacity));
}
.bg-transparent {
  background-color: transparent;
}
.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.object-contain {
  -o-object-fit: contain;
  object-fit: contain;
}
.object-cover {
  -o-object-fit: cover;
  object-fit: cover;
}
.p-2 {
  padding: 0.5rem;
}
.p-4 {
  padding: 1rem;
}
.p-5 {
  padding: 1.25rem;
}
.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}
.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.pb-4 {
  padding-bottom: 1rem;
}
.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}
.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}
.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}
.font-bold,
.hover\:font-bold:hover,
.link-active {
  font-weight: 700;
}
.uppercase {
  text-transform: uppercase;
}
.text-\[\#68744F\] {
  color: rgb(104 116 79 / var(--tw-text-opacity));
}
.text-black {
  color: rgb(0 0 0 / var(--tw-text-opacity));
}
.text-gray-800 {
  color: rgb(31 41 55 / var(--tw-text-opacity));
}
.text-white {
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.opacity-0 {
  opacity: 0;
}
.opacity-\[0\.50\] {
  opacity: 0.5;
}
.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color),
    0 2px 4px -2px var(--tw-shadow-color);
}
.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
}
.shadow-\[\#C69B6D\],
.shadow-white {
  --tw-shadow: var(--tw-shadow-colored);
}
.shadow-\[\#C69B6D\] {
  --tw-shadow-color: #c69b6d;
}
.shadow-white {
  --tw-shadow-color: #fff;
}
.transition {
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter, -webkit-backdrop-filter;
}
.transition-transform {
  transition-property: transform;
}
.duration-500 {
  transition-duration: 0.5s;
}
.duration-700 {
  transition-duration: 0.7s;
}
@keyframes slideDown {
  0% {
    transform: translateY(-10px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
@keyframes slideLeft {
  from {
    transform: translateX(-40%);
  }
  to {
    transform: translateX(0);
  }
}
@keyframes slideLeftDelay {
  0% {
    visibility: visible;
    transform: translateX(-20%);
  }
  100% {
    visibility: visible;
    transform: translateX(0);
  }
}
:root {
  background-color: #d8decc;
}
.main-height {
  height: calc(100vh - 10.5rem);
}
.link-active {
  color: #c69b6d;
}
.hover\:scale-125:hover {
  --tw-scale-x: 1.25;
  --tw-scale-y: 1.25;
}
.active .hs-carousel-active\:border-primary,
.active.hs-carousel-active\:border-primary {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p, oklch(var(--p) / var(--tw-border-opacity)));
}
@media (min-width: 768px) {
  .md\:size-6 {
    width: 1.5rem;
    height: 1.5rem;
  }
  .md\:h-36 {
    height: 9rem;
  }
  .md\:w-36 {
    width: 9rem;
  }
  .md\:w-44 {
    width: 11rem;
  }
  .md\:w-\[80\%\] {
    width: 80%;
  }
  .md\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .md\:flex-col {
    flex-direction: column;
  }
  .md\:px-10 {
    padding-left: 2.5rem;
    padding-right: 2.5rem;
  }
}
@media (min-width: 1024px) {
  .lg\:right-20 {
    right: 5rem;
  }
  .lg\:top-10 {
    top: 2.5rem;
  }
  .lg\:mb-10 {
    margin-bottom: 2.5rem;
  }
  .lg\:mt-10 {
    margin-top: 2.5rem;
  }
  .lg\:block {
    display: block;
  }
  .lg\:flex {
    display: flex;
  }
  .lg\:hidden {
    display: none;
  }
  .lg\:size-10 {
    width: 2.5rem;
    height: 2.5rem;
  }
  .lg\:h-\[25\.39rem\] {
    height: 25.39rem;
  }
  .lg\:h-\[40px\] {
    height: 40px;
  }
  .lg\:h-full {
    height: 100%;
  }
  .lg\:w-32 {
    width: 8rem;
  }
  .lg\:w-\[30\%\] {
    width: 30%;
  }
  .lg\:w-\[40px\] {
    width: 40px;
  }
  .lg\:w-\[65\%\] {
    width: 65%;
  }
  .lg\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .lg\:grid-cols-6 {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }
  .lg\:flex-row-reverse {
    flex-direction: row-reverse;
  }
  .lg\:justify-start {
    justify-content: flex-start;
  }
  .lg\:justify-center {
    justify-content: center;
  }
  .lg\:gap-10 {
    gap: 2.5rem;
  }
  .lg\:px-24 {
    padding-left: 6rem;
    padding-right: 6rem;
  }
  .lg\:pl-20 {
    padding-left: 5rem;
  }
  .lg\:text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }
  .lg\:text-\[2rem\] {
    font-size: 2rem;
  }
  .lg\:text-\[6rem\] {
    font-size: 6rem;
  }
  .lg\:text-xs {
    font-size: 0.75rem;
    line-height: 1rem;
  }
  .lg\:animate-slide-left {
    animation: 0.5s ease-out forwards slideLeft;
  }
  .lg\:animate-slide-left-delay {
    visibility: hidden;
    animation: 0.5s ease-out 0.5s forwards slideLeftDelay;
  }
}
@media (min-width: 1280px) {
  .xl\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .xl\:text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }
}
@media (prefers-color-scheme: dark) {
  .dark\:border-neutral-600 {
    --tw-border-opacity: 1;
    border-color: rgb(82 82 82 / var(--tw-border-opacity));
  }
  .dark\:bg-neutral-700 {
    --tw-bg-opacity: 1;
    background-color: rgb(64 64 64 / var(--tw-bg-opacity));
  }
  .dark\:bg-neutral-800 {
    --tw-bg-opacity: 1;
    background-color: rgb(38 38 38 / var(--tw-bg-opacity));
  }
  .dark\:bg-neutral-900 {
    --tw-bg-opacity: 1;
    background-color: rgb(23 23 23 / var(--tw-bg-opacity));
  }
  .dark\:text-white {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
  .active .dark\:hs-carousel-active\:border-primary,
  .active.dark\:hs-carousel-active\:border-primary {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p, oklch(var(--p) / var(--tw-border-opacity)));
  }
  .active .dark\:hs-carousel-active\:bg-primary,
  .active.dark\:hs-carousel-active\:bg-primary {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
  }
}
